{"version":3,"sources":["../src/index.ts"],"names":["isEnabled","caller","name","evaluate","linaria","babel","options","JSON","stringify","plugins","require"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;AAEA;;AAEA;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AA/BA;AACA;AACA;AACA;AACA;AA6BA,SAASA,SAAT,CAAmBC,MAAnB,EAAmE;AACjE,SAAO,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,IAAR,MAAiB,SAAjB,IAA8B,CAACD,MAAM,CAACE,QAA7C;AACD;;AAEc,SAASC,OAAT,CAAiBC,KAAjB,EAAmCC,OAAnC,EAA2D;AACxE,MAAI,CAACD,KAAK,CAACJ,MAAN,CAAaD,SAAb,CAAL,EAA8B;AAC5B,WAAO,EAAP;AACD;;AACD,qBAAM,SAAN,EAAiBO,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAjB;AACA,SAAO;AACLG,IAAAA,OAAO,EAAE,CAAC,CAACC,OAAO,CAAC,WAAD,CAAR,EAAuB,0BAAYJ,OAAZ,CAAvB,CAAD;AADJ,GAAP;AAGD","sourcesContent":["/**\n * File defines babel prest for Linaria.\n * It uses ./extract function that is an entry point for styles extraction.\n * It also bypass babel options defined in Linaria config file with it's defaults (see ./utils/loadOptions).\n */\nimport type { ConfigAPI, TransformCaller } from '@babel/core';\n\nimport { debug } from '@linaria/logger';\nimport type { PluginOptions } from './utils/loadOptions';\nimport loadOptions from './utils/loadOptions';\n\nexport { slugify } from '@linaria/utils';\n\nexport * as EvalCache from './eval-cache';\nexport { default as buildOptions } from './evaluators/buildOptions';\nexport { default as JSXElement } from './evaluators/visitors/JSXElement';\nexport { default as ProcessCSS } from './evaluators/visitors/ProcessCSS';\nexport { default as ProcessStyled } from './evaluators/visitors/ProcessStyled';\nexport { default as Module } from './module';\nexport {\n  default as transform,\n  extractCssFromAst,\n  shouldTransformCode,\n} from './transform';\nexport * from './types';\nexport type { PluginOptions } from './utils/loadOptions';\nexport { default as isNode } from './utils/isNode';\nexport { default as getVisitorKeys } from './utils/getVisitorKeys';\nexport { default as peek } from './utils/peek';\nexport { default as CollectDependencies } from './visitors/CollectDependencies';\nexport { default as DetectStyledImportName } from './visitors/DetectStyledImportName';\nexport { default as GenerateClassNames } from './visitors/GenerateClassNames';\n\nfunction isEnabled(caller?: TransformCaller & { evaluate?: true }) {\n  return caller?.name !== 'linaria' || !caller.evaluate;\n}\n\nexport default function linaria(babel: ConfigAPI, options: PluginOptions) {\n  if (!babel.caller(isEnabled)) {\n    return {};\n  }\n  debug('options', JSON.stringify(options));\n  return {\n    plugins: [[require('./extract'), loadOptions(options)]],\n  };\n}\n"],"file":"index.js"}