import type { Node, VisitorKeys } from '@babel/types';
import DepsGraph from './DepsGraph';
import GraphBuilderState from './GraphBuilderState';
import type { VisitorAction } from './types';
declare class GraphBuilder extends GraphBuilderState {
    static build(root: Node): DepsGraph;
    constructor(rootNode: Node);
    private isExportsIdentifier;
    private isExportsAssigment;
    private isTSExporterCall;
    baseVisit<TNode extends Node>(node: TNode, ignoreDeps?: boolean): void;
    visit<TNode extends Node, TParent extends Node>(node: TNode, parent: TParent | null, parentKey: VisitorKeys[TParent['type']] | null, listIdx?: number | null): VisitorAction;
}
declare const _default: typeof GraphBuilder.build;
export default _default;
