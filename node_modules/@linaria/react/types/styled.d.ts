/**
 * This file contains an runtime version of `styled` component. Responsibilities of the component are:
 * - returns ReactElement based on HTML tag used with `styled` or custom React Component
 * - injects classNames for the returned component
 * - injects CSS variables used to define dynamic styles based on props
 */
import React from 'react';
import type { CSSProperties, StyledMeta } from '@linaria/core';
export declare type NoInfer<A extends any> = [A][A extends any ? 0 : never];
interface CustomOmit {
    <T extends object, K extends [...(keyof T)[]]>(obj: T, keys: K): {
        [K2 in Exclude<keyof T, K[number]>]: T[K2];
    };
}
export declare const restOp: CustomOmit;
declare function styled<TConstructor extends React.ComponentType<any>>(tag: TConstructor extends React.ComponentType<infer T> ? [T] extends [{
    className?: string | undefined;
}] ? TConstructor : never : never): ComponentStyledTag<TConstructor>;
declare function styled<T>(tag: [T] extends [{
    className?: string | undefined;
}] ? React.ComponentType<T> : never): ComponentStyledTag<T>;
declare function styled<TName extends keyof JSX.IntrinsicElements>(tag: TName): HtmlStyledTag<TName>;
declare type StyledComponent<T> = StyledMeta & ([T] extends [React.FunctionComponent<any>] ? T : React.FunctionComponent<T & {
    as?: React.ElementType;
}>);
declare type StaticPlaceholder = string | number | CSSProperties | StyledMeta;
declare type HtmlStyledTag<TName extends keyof JSX.IntrinsicElements> = <TAdditionalProps = {}>(strings: TemplateStringsArray, ...exprs: Array<StaticPlaceholder | ((props: JSX.IntrinsicElements[TName] & Omit<TAdditionalProps, never>) => string | number)>) => StyledComponent<JSX.IntrinsicElements[TName] & TAdditionalProps>;
declare type ComponentStyledTag<T> = <OwnProps = {}, TrgProps = [T] extends [React.FunctionComponent<infer TProps>] ? TProps : T>(strings: TemplateStringsArray, ...exprs: TrgProps extends {
    style?: React.CSSProperties | undefined;
} ? Array<StaticPlaceholder | ((props: NoInfer<OwnProps & TrgProps>) => string | number)> : StaticPlaceholder[]) => keyof OwnProps extends never ? [T] extends [React.FunctionComponent<any>] ? StyledMeta & T : StyledComponent<TrgProps> : StyledComponent<OwnProps & TrgProps>;
declare type StyledJSXIntrinsics = {
    readonly [P in keyof JSX.IntrinsicElements]: HtmlStyledTag<P>;
};
export declare type Styled = typeof styled & StyledJSXIntrinsics;
declare const _default: Styled;
export default _default;
