{"version":3,"file":"styled.js","names":["hasMeta","value","isNotNull","x","singleQuotedStringLiteral","type","extra","rawValue","raw","StyledProcessor","BaseProcessor","constructor","args","component","rest","params","length","source","path","node","dependencies","push","ex","name","Error","addInterpolation","id","getVariableId","interpolations","unit","extractRules","valueCache","cssText","loc","rules","selector","className","get","__linaria","extends","displayName","start","getRuntimeReplacement","classes","uniqInterpolations","t","astService","props","getProps","callExpression","tagExpression","getTagComponentProps","asSelector","tagExpressionArgument","arrowFunctionExpression","blockStatement","identifier","tagExp","valueSource","extendsNode","propsObj","class","vars","forEach","items","stringLiteral","propExpressions","Object","entries","map","key","keyNode","objectProperty","booleanLiteral","propName","propValue","arrayExpression","objectExpression","filter","slug"],"sources":["../../src/processors/styled.ts"],"sourcesContent":["import type {\n  CallExpression,\n  Expression,\n  ObjectExpression,\n  SourceLocation,\n  StringLiteral,\n} from '@babel/types';\n\nimport type { StyledMeta } from '@linaria/core';\nimport type { ProcessorParams } from '@linaria/core/processors/BaseProcessor';\nimport BaseProcessor from '@linaria/core/processors/BaseProcessor';\nimport type {\n  Rules,\n  WrappedNode,\n  IInterpolation,\n  ValueCache,\n} from '@linaria/core/processors/types';\n\nexport function hasMeta(value: unknown): value is StyledMeta {\n  return typeof value === 'object' && value !== null && '__linaria' in value;\n}\n\nconst isNotNull = <T>(x: T | null): x is T => x !== null;\n\nexport interface IProps {\n  atomic?: boolean;\n  class?: string;\n  name: string;\n  vars?: Record<string, Expression[]>;\n}\n\nconst singleQuotedStringLiteral = (value: string): StringLiteral => ({\n  type: 'StringLiteral',\n  value,\n  extra: {\n    rawValue: value,\n    raw: `'${value}'`,\n  },\n});\n\nexport default class StyledProcessor extends BaseProcessor {\n  public component: WrappedNode;\n\n  constructor(...args: ProcessorParams) {\n    super(...args);\n\n    let component: WrappedNode | undefined;\n    const [type, value, ...rest] = this.params[0] ?? [];\n    if (type === 'call' && rest.length === 0) {\n      const [source, path] = value;\n      if (path.node.type === 'StringLiteral') {\n        component = path.node.value;\n      } else if (\n        path.node.type === 'ArrowFunctionExpression' ||\n        path.node.type === 'FunctionExpression'\n      ) {\n        // Special case when styled wraps a function\n        // It's actually the same as wrapping a built-in tag\n        component = 'FunctionalComponent';\n      } else {\n        component = {\n          node: path.node,\n          source,\n        };\n        this.dependencies.push({\n          ex: path,\n          source,\n        });\n      }\n    }\n\n    if (type === 'member') {\n      if (value.node.type === 'Identifier') {\n        component = value.node.name;\n      } else if (value.node.type === 'StringLiteral') {\n        component = value.node.value;\n      }\n    }\n\n    if (!component || this.params.length > 1) {\n      throw new Error('Invalid usage of `styled` tag');\n    }\n\n    this.component = component;\n  }\n\n  public override addInterpolation(node: Expression, source: string) {\n    const id = this.getVariableId(source);\n\n    this.interpolations.push({\n      id,\n      node,\n      source,\n      unit: '',\n    });\n\n    return `var(--${id})`;\n  }\n\n  public override extractRules(\n    valueCache: ValueCache,\n    cssText: string,\n    loc?: SourceLocation | null\n  ): [Rules, string] {\n    const rules: Rules = {};\n\n    let selector = `.${this.className}`;\n\n    // If `styled` wraps another component and not a primitive,\n    // get its class name to create a more specific selector\n    // it'll ensure that styles are overridden properly\n    let value =\n      typeof this.component === 'string'\n        ? null\n        : valueCache.get(this.component.node);\n    while (hasMeta(value)) {\n      selector += `.${value.__linaria.className}`;\n      value = value.__linaria.extends;\n    }\n\n    rules[selector] = {\n      cssText,\n      className: this.className,\n      displayName: this.displayName,\n      start: loc?.start ?? null,\n    };\n\n    return [rules, this.className];\n  }\n\n  public override getRuntimeReplacement(\n    classes: string,\n    uniqInterpolations: IInterpolation[]\n  ): [Expression, boolean] {\n    const t = this.astService;\n\n    const props = this.getProps(classes, uniqInterpolations);\n\n    return [\n      t.callExpression(this.tagExpression, [this.getTagComponentProps(props)]),\n      true,\n    ];\n  }\n\n  public override get asSelector(): string {\n    return `.${this.className}`;\n  }\n\n  protected get tagExpressionArgument(): Expression {\n    const t = this.astService;\n    if (typeof this.component === 'string') {\n      if (this.component === 'FunctionalComponent') {\n        return t.arrowFunctionExpression([], t.blockStatement([]));\n      }\n\n      return singleQuotedStringLiteral(this.component);\n    }\n\n    return t.identifier(this.component.source);\n  }\n\n  protected get tagExpression(): CallExpression {\n    const t = this.astService;\n    return t.callExpression(this.tagExp, [this.tagExpressionArgument]);\n  }\n\n  public override get valueSource(): string {\n    const extendsNode =\n      typeof this.component === 'string' ? null : this.component.source;\n    return `{\n    displayName: \"${this.displayName}\",\n    __linaria: {\n      className: \"${this.className}\",\n      extends: ${extendsNode}\n    }\n  }`;\n  }\n\n  protected getProps(\n    classes: string,\n    uniqInterpolations: IInterpolation[]\n  ): IProps {\n    const propsObj: IProps = {\n      name: this.displayName,\n      class: this.className,\n    };\n\n    // If we found any interpolations, also pass them, so they can be applied\n    if (this.interpolations.length) {\n      propsObj.vars = {};\n      uniqInterpolations.forEach(({ id, unit, node }) => {\n        const items: Expression[] = [node];\n\n        if (unit) {\n          items.push(this.astService.stringLiteral(unit));\n        }\n\n        propsObj.vars![id] = items;\n      });\n    }\n\n    return propsObj;\n  }\n\n  protected getTagComponentProps(props: IProps): ObjectExpression {\n    const t = this.astService;\n\n    const propExpressions = Object.entries(props)\n      .map(([key, value]: [key: string, value: IProps[keyof IProps]]) => {\n        if (!value) {\n          return null;\n        }\n\n        const keyNode = t.identifier(key);\n\n        if (typeof value === 'string') {\n          return t.objectProperty(keyNode, t.stringLiteral(value));\n        }\n\n        if (typeof value === 'boolean') {\n          return t.objectProperty(keyNode, t.booleanLiteral(value));\n        }\n\n        const vars = Object.entries(value).map(([propName, propValue]) => {\n          return t.objectProperty(\n            t.stringLiteral(propName),\n            t.arrayExpression(propValue)\n          );\n        });\n\n        return t.objectProperty(keyNode, t.objectExpression(vars));\n      })\n      .filter(isNotNull);\n\n    return t.objectExpression(propExpressions);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected getVariableId(value: string): string {\n    // make the variable unique to this styled component\n    return `${this.slug}-${this.interpolations.length}`;\n  }\n}\n"],"mappings":"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"}