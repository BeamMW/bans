{"version":3,"file":"index.js","names":["isHoistableExport","node","isVariableDeclaration","kind","declarations","get","Array","isArray","length","init","isCallExpression","callee","isIdentifier","name","scope","hasReference","index","babel","options","visitor","Program","enter","path","state","queue","rules","dependencies","replacements","traverse","TaggedTemplateExpression","p","processTemplateExpression","replaceTagWithValue","JSXElement","exit","filter","forEach","remove","unshiftContainer","preset","context","plugins"],"sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/**\n * This file is a babel preset used to transform files inside evaluators.\n * It works the same as main `babel/extract` preset, but do not evaluate lazy dependencies.\n */\nimport type { NodePath } from '@babel/traverse';\nimport type { Program, Statement, VariableDeclaration } from '@babel/types';\n\nimport type { State, StrictOptions } from '@linaria/babel-preset';\nimport {\n  JSXElement,\n  replaceTagWithValue,\n  processTemplateExpression,\n} from '@linaria/babel-preset';\n\nimport type { Core } from './babel';\n\nconst isHoistableExport = (\n  node: NodePath<Statement>\n): node is NodePath<Statement> & NodePath<VariableDeclaration> => {\n  // Only `var` can be hoisted\n  if (!node.isVariableDeclaration({ kind: 'var' })) return false;\n\n  const declarations = node.get('declarations');\n\n  // Our target has only one declaration\n  if (!Array.isArray(declarations) || declarations.length !== 1) return false;\n\n  const init = declarations[0].get('init');\n  // It should be initialized with CallExpression…\n  if (!init || Array.isArray(init) || !init.isCallExpression()) return false;\n\n  const callee = init.get('callee');\n  // … which callee should be `required` …\n  if (Array.isArray(callee) || !callee.isIdentifier({ name: 'require' }))\n    return false;\n\n  // … which should be a global identifier\n  return !callee.scope.hasReference('require');\n};\n\nfunction index(babel: Core, options: StrictOptions) {\n  return {\n    visitor: {\n      Program: {\n        enter(path: NodePath<Program>, state: State) {\n          // Collect all the style rules from the styles we encounter\n          state.queue = [];\n          state.rules = {};\n          state.index = -1;\n          state.dependencies = [];\n          state.replacements = [];\n\n          // We need our transforms to run before anything else\n          // So we traverse here instead of a in a visitor\n          path.traverse({\n            TaggedTemplateExpression: (p) => {\n              processTemplateExpression(babel, 'preeval', p, state, options);\n              replaceTagWithValue(p, state, options);\n            },\n            JSXElement,\n          });\n        },\n        exit(path: NodePath<Program>) {\n          /* A really dirty hack that solves https://github.com/callstack/linaria/issues/800\n           * Sometimes babel inserts `require` after usages of required modules.\n           * It makes the shaker sad. As a temporary solution, we hoist requires.\n           * This hack should be deleted after transition `shaker` to @babel/traverse\n           */\n          path\n            .get('body')\n            .filter(isHoistableExport)\n            .forEach((p) => {\n              const { node } = p;\n              p.remove();\n              path.unshiftContainer('body', node);\n            });\n        },\n      },\n    },\n  };\n}\n\nexport default function preset(context: unknown, options: StrictOptions) {\n  return {\n    plugins: [[index, options]],\n  };\n}\n"],"mappings":";;;;;;;AASA;;AATA;;AACA;AACA;AACA;AACA;AAaA,MAAMA,iBAAiB,GACrBC,IADwB,IAEwC;EAChE;EACA,IAAI,CAACA,IAAI,CAACC,qBAAL,CAA2B;IAAEC,IAAI,EAAE;EAAR,CAA3B,CAAL,EAAkD,OAAO,KAAP;EAElD,MAAMC,YAAY,GAAGH,IAAI,CAACI,GAAL,CAAS,cAAT,CAArB,CAJgE,CAMhE;;EACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAD,IAAgCA,YAAY,CAACI,MAAb,KAAwB,CAA5D,EAA+D,OAAO,KAAP;EAE/D,MAAMC,IAAI,GAAGL,YAAY,CAAC,CAAD,CAAZ,CAAgBC,GAAhB,CAAoB,MAApB,CAAb,CATgE,CAUhE;;EACA,IAAI,CAACI,IAAD,IAASH,KAAK,CAACC,OAAN,CAAcE,IAAd,CAAT,IAAgC,CAACA,IAAI,CAACC,gBAAL,EAArC,EAA8D,OAAO,KAAP;EAE9D,MAAMC,MAAM,GAAGF,IAAI,CAACJ,GAAL,CAAS,QAAT,CAAf,CAbgE,CAchE;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcI,MAAd,KAAyB,CAACA,MAAM,CAACC,YAAP,CAAoB;IAAEC,IAAI,EAAE;EAAR,CAApB,CAA9B,EACE,OAAO,KAAP,CAhB8D,CAkBhE;;EACA,OAAO,CAACF,MAAM,CAACG,KAAP,CAAaC,YAAb,CAA0B,SAA1B,CAAR;AACD,CAtBD;;AAwBA,SAASC,KAAT,CAAeC,KAAf,EAA4BC,OAA5B,EAAoD;EAClD,OAAO;IACLC,OAAO,EAAE;MACPC,OAAO,EAAE;QACPC,KAAK,CAACC,IAAD,EAA0BC,KAA1B,EAAwC;UAC3C;UACAA,KAAK,CAACC,KAAN,GAAc,EAAd;UACAD,KAAK,CAACE,KAAN,GAAc,EAAd;UACAF,KAAK,CAACP,KAAN,GAAc,CAAC,CAAf;UACAO,KAAK,CAACG,YAAN,GAAqB,EAArB;UACAH,KAAK,CAACI,YAAN,GAAqB,EAArB,CAN2C,CAQ3C;UACA;;UACAL,IAAI,CAACM,QAAL,CAAc;YACZC,wBAAwB,EAAGC,CAAD,IAAO;cAC/B,IAAAC,sCAAA,EAA0Bd,KAA1B,EAAiC,SAAjC,EAA4Ca,CAA5C,EAA+CP,KAA/C,EAAsDL,OAAtD;cACA,IAAAc,gCAAA,EAAoBF,CAApB,EAAuBP,KAAvB,EAA8BL,OAA9B;YACD,CAJW;YAKZe,UAAU,EAAVA;UALY,CAAd;QAOD,CAlBM;;QAmBPC,IAAI,CAACZ,IAAD,EAA0B;UAC5B;AACV;AACA;AACA;AACA;UACUA,IAAI,CACDjB,GADH,CACO,MADP,EAEG8B,MAFH,CAEUnC,iBAFV,EAGGoC,OAHH,CAGYN,CAAD,IAAO;YACd,MAAM;cAAE7B;YAAF,IAAW6B,CAAjB;YACAA,CAAC,CAACO,MAAF;YACAf,IAAI,CAACgB,gBAAL,CAAsB,MAAtB,EAA8BrC,IAA9B;UACD,CAPH;QAQD;;MAjCM;IADF;EADJ,CAAP;AAuCD;;AAEc,SAASsC,MAAT,CAAgBC,OAAhB,EAAkCtB,OAAlC,EAA0D;EACvE,OAAO;IACLuB,OAAO,EAAE,CAAC,CAACzB,KAAD,EAAQE,OAAR,CAAD;EADJ,CAAP;AAGD"}