/**
 * This file is a babel preset used to transform files inside evaluators.
 * It works the same as main `babel/extract` preset, but do not evaluate lazy dependencies.
 */
import type { NodePath } from '@babel/traverse';
import type { Program } from '@babel/types';
import type { State, StrictOptions } from '@linaria/babel-preset';
import { ProcessStyled, ProcessCSS } from '@linaria/babel-preset';
import { Core } from './babel';
declare function index(babel: Core, options: StrictOptions): {
    visitor: {
        Program: {
            enter(path: NodePath<Program>, state: State): void;
            exit(path: NodePath<Program>): void;
        };
        CallExpression: typeof ProcessStyled;
        TaggedTemplateExpression: typeof ProcessCSS;
    };
};
export default function preset(context: any, options: StrictOptions): {
    plugins: (StrictOptions | typeof index)[][];
};
export {};
