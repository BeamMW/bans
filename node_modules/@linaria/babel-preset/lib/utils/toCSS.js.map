{"version":3,"file":"toCSS.js","names":["hyphenate","s","startsWith","replace","match","p1","toLowerCase","toCSS","o","Array","isArray","map","join","isBoxedPrimitive","valueOf","toString","Object","entries","filter","value","key","isSerializable","p2","p3","unitless"],"sources":["../../src/utils/toCSS.ts"],"sourcesContent":["import type { JSONValue } from '../types';\nimport { unitless } from '../units';\n\nimport isBoxedPrimitive from './isBoxedPrimitive';\nimport isSerializable from './isSerializable';\n\nconst hyphenate = (s: string) => {\n  if (s.startsWith('--')) {\n    // It's a custom property which is already well formatted.\n    return s;\n  }\n  return (\n    s\n      // Hyphenate CSS property names from camelCase version from JS string\n      .replace(/([A-Z])/g, (match, p1) => `-${p1.toLowerCase()}`)\n      // Special case for `-ms` because in JS it starts with `ms` unlike `Webkit`\n      .replace(/^ms-/, '-ms-')\n  );\n};\n\n// Some tools such as polished.js output JS objects\n// To support them transparently, we convert JS objects to CSS strings\nexport default function toCSS(o: JSONValue): string {\n  if (Array.isArray(o)) {\n    return o.map(toCSS).join('\\n');\n  }\n\n  if (isBoxedPrimitive(o)) {\n    return o.valueOf().toString();\n  }\n\n  return Object.entries(o)\n    .filter(\n      ([, value]) =>\n        // Ignore all falsy values except numbers\n        typeof value === 'number' || value\n    )\n    .map(([key, value]) => {\n      if (isSerializable(value)) {\n        return `${key} { ${toCSS(value)} }`;\n      }\n\n      return `${hyphenate(key)}: ${\n        typeof value === 'number' &&\n        value !== 0 &&\n        // Strip vendor prefixes when checking if the value is unitless\n        !(\n          key.replace(\n            /^(Webkit|Moz|O|ms)([A-Z])(.+)$/,\n            (match, p1, p2, p3) => `${p2.toLowerCase()}${p3}`\n          ) in unitless\n        )\n          ? `${value}px`\n          : value\n      };`;\n    })\n    .join(' ');\n}\n"],"mappings":";;;;;;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,SAAS,GAAIC,CAAD,IAAe;EAC/B,IAAIA,CAAC,CAACC,UAAF,CAAa,IAAb,CAAJ,EAAwB;IACtB;IACA,OAAOD,CAAP;EACD;;EACD,OACEA,CAAC,CACC;EADD,CAEEE,OAFH,CAEW,UAFX,EAEuB,CAACC,KAAD,EAAQC,EAAR,KAAgB,IAAGA,EAAE,CAACC,WAAH,EAAiB,EAF3D,EAGE;EAHF,CAIGH,OAJH,CAIW,MAJX,EAImB,MAJnB,CADF;AAOD,CAZD,C,CAcA;AACA;;;AACe,SAASI,KAAT,CAAeC,CAAf,EAAqC;EAClD,IAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;IACpB,OAAOA,CAAC,CAACG,GAAF,CAAMJ,KAAN,EAAaK,IAAb,CAAkB,IAAlB,CAAP;EACD;;EAED,IAAI,IAAAC,yBAAA,EAAiBL,CAAjB,CAAJ,EAAyB;IACvB,OAAOA,CAAC,CAACM,OAAF,GAAYC,QAAZ,EAAP;EACD;;EAED,OAAOC,MAAM,CAACC,OAAP,CAAeT,CAAf,EACJU,MADI,CAEH,CAAC,GAAGC,KAAH,CAAD,KACE;EACA,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAJ5B,EAMJR,GANI,CAMA,CAAC,CAACS,GAAD,EAAMD,KAAN,CAAD,KAAkB;IACrB,IAAI,IAAAE,uBAAA,EAAeF,KAAf,CAAJ,EAA2B;MACzB,OAAQ,GAAEC,GAAI,MAAKb,KAAK,CAACY,KAAD,CAAQ,IAAhC;IACD;;IAED,OAAQ,GAAEnB,SAAS,CAACoB,GAAD,CAAM,KACvB,OAAOD,KAAP,KAAiB,QAAjB,IACAA,KAAK,KAAK,CADV,IAEA;IACA,EACEC,GAAG,CAACjB,OAAJ,CACE,gCADF,EAEE,CAACC,KAAD,EAAQC,EAAR,EAAYiB,EAAZ,EAAgBC,EAAhB,KAAwB,GAAED,EAAE,CAAChB,WAAH,EAAiB,GAAEiB,EAAG,EAFlD,KAGKC,eAJP,CAHA,GASK,GAAEL,KAAM,IATb,GAUIA,KACL,GAZD;EAaD,CAxBI,EAyBJP,IAzBI,CAyBC,GAzBD,CAAP;AA0BD"}