{"version":3,"sources":["../../src/utils/isBoxedPrimitive.ts"],"names":["constructors","isBoxedPrimitive","o","includes","constructor","name","valueOf"],"mappings":";;;;;;AAAA;AACA;AAEA,MAAMA,YAAY,GAAG,CAAC,QAAD,EAAW,QAAX,CAArB;;AACe,SAASC,gBAAT,CAA0BC,CAA1B,EAAwD;AACrE,SACEF,YAAY,CAACG,QAAb,CAAsBD,CAAC,CAACE,WAAF,CAAcC,IAApC,KACA,QAAOH,CAAP,aAAOA,CAAP,uBAAOA,CAAC,CAAEI,OAAH,EAAP,MAAwB,QAF1B;AAID","sourcesContent":["// There is a problem with using boxed numbers and strings in TS,\n// so we cannot just use `instanceof` here\n\nconst constructors = ['Number', 'String'];\nexport default function isBoxedPrimitive(o: any): o is Number | String {\n  return (\n    constructors.includes(o.constructor.name) &&\n    typeof o?.valueOf() !== 'object'\n  );\n}\n"],"file":"isBoxedPrimitive.js"}