{"version":3,"file":"unwrapSequence.js","names":["unwrapSequence","path","isSequenceExpression","expressions","get","lastExpression","pop","undefined"],"sources":["../../src/utils/unwrapSequence.ts"],"sourcesContent":["import type { NodePath } from '@babel/traverse';\nimport type { Expression, V8IntrinsicIdentifier } from '@babel/types';\n\n/**\n * If expression is a sequence like `(a, b, c)`, returns `c`\n * otherwise returns an original expression\n * @param path\n */\nexport default function unwrapSequence(\n  path: NodePath<Expression | V8IntrinsicIdentifier>\n): NodePath<Expression | V8IntrinsicIdentifier> | undefined {\n  if (path.isSequenceExpression()) {\n    const [...expressions] = path.get('expressions');\n    const lastExpression = expressions.pop();\n    return lastExpression ? unwrapSequence(lastExpression) : undefined;\n  }\n\n  return path;\n}\n"],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AACA;AACe,SAASA,cAAT,CACbC,IADa,EAE6C;EAC1D,IAAIA,IAAI,CAACC,oBAAL,EAAJ,EAAiC;IAC/B,MAAM,CAAC,GAAGC,WAAJ,IAAmBF,IAAI,CAACG,GAAL,CAAS,aAAT,CAAzB;IACA,MAAMC,cAAc,GAAGF,WAAW,CAACG,GAAZ,EAAvB;IACA,OAAOD,cAAc,GAAGL,cAAc,CAACK,cAAD,CAAjB,GAAoCE,SAAzD;EACD;;EAED,OAAON,IAAP;AACD"}