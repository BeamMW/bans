{"version":3,"file":"processTemplateExpression.js","names":["collectTemplateDependencies","getTagProcessor","processTemplateExpression","babel","stage","p","state","options","tagProcessor","quasis","expressions","queue","push","path","dependencies"],"sources":["../../src/utils/processTemplateExpression.ts"],"sourcesContent":["import type { NodePath } from '@babel/traverse';\nimport type { TaggedTemplateExpression } from '@babel/types';\n\nimport type { Core } from '../babel';\nimport type { State, StrictOptions } from '../types';\n\nimport collectTemplateDependencies from './collectTemplateDependencies';\nimport getTagProcessor from './getTagProcessor';\n\nconst processTemplateExpression = (\n  babel: Core,\n  stage: 'extract' | 'preeval',\n  p: NodePath<TaggedTemplateExpression>,\n  state: State,\n  options: StrictOptions\n) => {\n  const tagProcessor = getTagProcessor(p, state, options);\n  if (tagProcessor === null) return;\n\n  if (stage === 'extract') {\n    const [quasis, expressions] = collectTemplateDependencies(\n      babel,\n      p,\n      state,\n      options\n    );\n\n    state.queue.push({\n      path: p,\n      quasis,\n      expressions,\n      dependencies: tagProcessor.dependencies,\n    });\n  }\n};\n\nexport default processTemplateExpression;\n"],"mappings":"AAMA,OAAOA,2BAAP,MAAwC,+BAAxC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,yBAAyB,GAAG,CAChCC,KADgC,EAEhCC,KAFgC,EAGhCC,CAHgC,EAIhCC,KAJgC,EAKhCC,OALgC,KAM7B;EACH,MAAMC,YAAY,GAAGP,eAAe,CAACI,CAAD,EAAIC,KAAJ,EAAWC,OAAX,CAApC;EACA,IAAIC,YAAY,KAAK,IAArB,EAA2B;;EAE3B,IAAIJ,KAAK,KAAK,SAAd,EAAyB;IACvB,MAAM,CAACK,MAAD,EAASC,WAAT,IAAwBV,2BAA2B,CACvDG,KADuD,EAEvDE,CAFuD,EAGvDC,KAHuD,EAIvDC,OAJuD,CAAzD;IAOAD,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAiB;MACfC,IAAI,EAAER,CADS;MAEfI,MAFe;MAGfC,WAHe;MAIfI,YAAY,EAAEN,YAAY,CAACM;IAJZ,CAAjB;EAMD;AACF,CAzBD;;AA2BA,eAAeZ,yBAAf"}