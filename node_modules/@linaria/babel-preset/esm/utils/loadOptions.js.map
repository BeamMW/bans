{"version":3,"file":"loadOptions.js","names":["cosmiconfig","explorer","loadOptions","overrides","configFile","ignore","rules","rest","result","undefined","loadSync","searchSync","displayName","evaluate","action","test","config"],"sources":["../../src/utils/loadOptions.ts"],"sourcesContent":["import cosmiconfig from 'cosmiconfig';\n\nimport type { StrictOptions } from '../types';\n\nexport type PluginOptions = StrictOptions & {\n  configFile?: string;\n};\n\nconst explorer = cosmiconfig('linaria');\n\nexport default function loadOptions(\n  overrides: Partial<PluginOptions> = {}\n): Partial<StrictOptions> {\n  const { configFile, ignore, rules, ...rest } = overrides;\n\n  const result =\n    configFile !== undefined\n      ? explorer.loadSync(configFile)\n      : explorer.searchSync();\n\n  return {\n    displayName: false,\n    evaluate: true,\n    rules: rules ?? [\n      {\n        // FIXME: if `rule` is not specified in a config, `@linaria/shaker` should be added as a dependency\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        action: '@linaria/shaker',\n      },\n      {\n        // The old `ignore` option is used as a default value for `ignore` rule.\n        test: ignore ?? /[\\\\/]node_modules[\\\\/]/,\n        action: 'ignore',\n      },\n    ],\n    ...(result ? result.config : null),\n    ...rest,\n  };\n}\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AAQA,MAAMC,QAAQ,GAAGD,WAAW,CAAC,SAAD,CAA5B;AAEA,eAAe,SAASE,WAAT,CACbC,SAAiC,GAAG,EADvB,EAEW;EACxB,MAAM;IAAEC,UAAF;IAAcC,MAAd;IAAsBC,KAAtB;IAA6B,GAAGC;EAAhC,IAAyCJ,SAA/C;EAEA,MAAMK,MAAM,GACVJ,UAAU,KAAKK,SAAf,GACIR,QAAQ,CAACS,QAAT,CAAkBN,UAAlB,CADJ,GAEIH,QAAQ,CAACU,UAAT,EAHN;EAKA,OAAO;IACLC,WAAW,EAAE,KADR;IAELC,QAAQ,EAAE,IAFL;IAGLP,KAAK,EAAEA,KAAK,IAAI,CACd;MACE;MACA;MACAQ,MAAM,EAAE;IAHV,CADc,EAMd;MACE;MACAC,IAAI,EAAEV,MAAM,IAAI,wBAFlB;MAGES,MAAM,EAAE;IAHV,CANc,CAHX;IAeL,IAAIN,MAAM,GAAGA,MAAM,CAACQ,MAAV,GAAmB,IAA7B,CAfK;IAgBL,GAAGT;EAhBE,CAAP;AAkBD"}