{"version":3,"file":"evaluateExpressions.js","names":["generator","expression","statement","debug","error","evaluate","ValueType","throwIfInvalid","unwrapNode","isLazyValue","v","kind","LAZY","isEvaluatedValue","VALUE","expressionWrapperTpl","expressionTpl","exportsLinariaPrevalTpl","addLinariaPreval","types","t","path","lazyDeps","wrapName","scope","generateUidIdentifier","statements","expressions","arrayExpression","map","exp","programNode","node","program","body","directives","sourceType","interpreter","getExpression","value","originalEx","ex","hasPreval","exports","evaluateExpressions","babel","templateExpressions","options","filename","dependencies","evaluatedDeps","forEach","deps","push","filter","dep","undefined","source","expressionsToEvaluate","originalLazyExpressions","length","lazyValues","code","programWithPreval","evaluation","__linariaPreval","e","Error","stack","valueCache","Map","key","idx","set"],"sources":["../../src/utils/evaluateExpressions.ts"],"sourcesContent":["import generator from '@babel/generator';\nimport { expression, statement } from '@babel/template';\nimport type { NodePath } from '@babel/traverse';\nimport type { Program, Expression } from '@babel/types';\n\nimport { debug, error } from '@linaria/logger';\n\nimport type { Core } from '../babel';\nimport evaluate from '../evaluators';\nimport type {\n  LazyValue,\n  State,\n  StrictOptions,\n  TemplateExpression,\n  Value,\n  ValueCache,\n  ExpressionValue,\n  EvaluatedValue,\n} from '../types';\nimport { ValueType } from '../types';\n\nimport throwIfInvalid from './throwIfInvalid';\nimport unwrapNode from './unwrapNode';\n\nfunction isLazyValue(v: ExpressionValue): v is LazyValue {\n  return v.kind === ValueType.LAZY;\n}\n\nfunction isEvaluatedValue(v: ExpressionValue): v is EvaluatedValue {\n  return v.kind === ValueType.VALUE;\n}\n\n// All exported values will be wrapped with this function\nconst expressionWrapperTpl = statement(`\n  const %%wrapName%% = (fn) => {\n    try {\n      return fn();\n    } catch (e) {\n      return e;\n    }\n  };\n`);\n\nconst expressionTpl = expression('%%wrapName%%(() => %%expression%%)');\nconst exportsLinariaPrevalTpl = statement(\n  'exports.__linariaPreval = %%expressions%%'\n);\n\nfunction addLinariaPreval(\n  { types: t }: Core,\n  path: NodePath<Program>,\n  lazyDeps: Array<Expression>\n): Program {\n  // Constant __linariaPreval with all dependencies\n  const wrapName = path.scope.generateUidIdentifier('wrap');\n  const statements = [\n    expressionWrapperTpl({ wrapName }),\n    exportsLinariaPrevalTpl({\n      expressions: t.arrayExpression(\n        lazyDeps.map((exp) => expressionTpl({ expression: exp, wrapName }))\n      ),\n    }),\n  ];\n\n  const programNode = path.node;\n  return t.program(\n    [...programNode.body, ...statements],\n    programNode.directives,\n    programNode.sourceType,\n    programNode.interpreter\n  );\n}\n\nconst getExpression = (\n  value:\n    | {\n        originalEx: NodePath<Expression>;\n        ex: NodePath<Expression> | Expression;\n      }\n    | {\n        ex: NodePath<Expression>;\n      }\n): NodePath<Expression> =>\n  'originalEx' in value ? value.originalEx : value.ex;\n\nfunction hasPreval(\n  exports: unknown\n): exports is { __linariaPreval: Value[] | null | undefined } {\n  if (!exports || typeof exports !== 'object') {\n    return false;\n  }\n\n  return '__linariaPreval' in exports;\n}\n\nexport default function evaluateExpressions(\n  babel: Core,\n  program: NodePath<Program>,\n  templateExpressions: TemplateExpression[],\n  options: StrictOptions,\n  filename: string\n): [dependencies: State['dependencies'], valueCache: ValueCache] {\n  const dependencies: State['dependencies'] = [];\n\n  const lazyDeps: Omit<LazyValue, 'kind'>[] = [];\n  const evaluatedDeps: Omit<EvaluatedValue, 'kind'>[] = [];\n\n  templateExpressions.forEach(({ expressions, dependencies: deps }) => {\n    lazyDeps.push(...expressions.filter(isLazyValue));\n    evaluatedDeps.push(...expressions.filter(isEvaluatedValue));\n\n    deps.forEach((dep) => {\n      if (dep.value !== undefined) {\n        evaluatedDeps.push({\n          ex: dep.ex,\n          source: dep.source,\n          value: dep.value,\n        });\n      } else {\n        lazyDeps.push({\n          ex: dep.ex,\n          originalEx: dep.ex,\n          source: dep.source,\n        });\n      }\n    });\n  });\n\n  const expressionsToEvaluate = lazyDeps.map((v) => unwrapNode(v.ex));\n  const originalLazyExpressions = lazyDeps.map((v) =>\n    unwrapNode(getExpression(v))\n  );\n\n  debug('lazy-deps:count', lazyDeps.length);\n\n  let lazyValues: Value[] = [];\n\n  if (expressionsToEvaluate.length > 0) {\n    debug(\n      'lazy-deps:original-expressions-list',\n      originalLazyExpressions.map((node) => generator(node).code)\n    );\n    debug(\n      'lazy-deps:expressions-to-eval-list',\n      expressionsToEvaluate.map((node) => generator(node).code)\n    );\n\n    const programWithPreval = addLinariaPreval(\n      babel,\n      program,\n      expressionsToEvaluate\n    );\n    const { code } = generator(programWithPreval);\n    debug('lazy-deps:evaluate', '');\n    try {\n      const evaluation = evaluate(code, filename, options);\n      debug('lazy-deps:sub-files', evaluation.dependencies);\n\n      dependencies.push(...evaluation.dependencies);\n      lazyValues = hasPreval(evaluation.value)\n        ? evaluation.value.__linariaPreval || []\n        : [];\n      debug('lazy-deps:values', lazyValues);\n    } catch (e: unknown) {\n      error('lazy-deps:evaluate:error', code);\n      if (e instanceof Error) {\n        throw new Error(\n          `An unexpected runtime error occurred during dependencies evaluation: \\n${e.stack}\\n\\nIt may happen when your code or third party module is invalid or uses identifiers not available in Node environment, eg. window. \\n` +\n            'Note that line numbers in above stack trace will most likely not match, because Linaria needed to transform your code a bit.\\n'\n        );\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  const valueCache: ValueCache = new Map();\n\n  originalLazyExpressions.forEach((key, idx) => {\n    throwIfInvalid(lazyValues[idx], getExpression(lazyDeps[idx]));\n    return valueCache.set(key, lazyValues[idx]);\n  });\n\n  evaluatedDeps.forEach((dep) => {\n    throwIfInvalid(dep.value, dep.ex);\n    return valueCache.set(dep.ex.node, dep.value);\n  });\n\n  return [dependencies, valueCache];\n}\n"],"mappings":"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"}