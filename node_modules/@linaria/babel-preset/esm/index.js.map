{"version":3,"file":"index.js","names":["debug","loadOptions","slugify","EvalCache","default","buildOptions","JSXElement","replaceTagWithValue","Module","transform","extractCssFromAst","shouldTransformCode","transformUrl","collectExportsAndImports","isNode","getTagProcessor","getVisitorKeys","peek","processTemplateExpression","isEnabled","caller","name","evaluate","linaria","babel","options","JSON","stringify","plugins","require"],"sources":["../src/index.ts"],"sourcesContent":["/**\n * File defines babel prest for Linaria.\n * It uses ./extract function that is an entry point for styles extraction.\n * It also bypass babel options defined in Linaria config file with it's defaults (see ./utils/loadOptions).\n */\nimport type { ConfigAPI, TransformCaller } from '@babel/core';\n\nimport { debug } from '@linaria/logger';\n\nimport type { PluginOptions } from './utils/loadOptions';\nimport loadOptions from './utils/loadOptions';\n\nexport { slugify } from '@linaria/utils';\n\nexport * as EvalCache from './eval-cache';\nexport { default as buildOptions } from './evaluators/buildOptions';\nexport { default as JSXElement } from './evaluators/visitors/JSXElement';\nexport { default as replaceTagWithValue } from './utils/replaceTagWithValue';\nexport { default as Module } from './module';\nexport {\n  default as transform,\n  extractCssFromAst,\n  shouldTransformCode,\n  transformUrl,\n} from './transform';\nexport * from './types';\nexport { default as collectExportsAndImports } from './utils/collectExportsAndImports';\nexport type {\n  IImport,\n  IExport,\n  IState,\n} from './utils/collectExportsAndImports';\nexport type { PluginOptions } from './utils/loadOptions';\nexport { default as isNode } from './utils/isNode';\nexport { default as getTagProcessor } from './utils/getTagProcessor';\nexport { default as getVisitorKeys } from './utils/getVisitorKeys';\nexport type { VisitorKeys } from './utils/getVisitorKeys';\nexport { default as peek } from './utils/peek';\nexport { default as processTemplateExpression } from './utils/processTemplateExpression';\n\nfunction isEnabled(caller?: TransformCaller & { evaluate?: true }) {\n  return caller?.name !== 'linaria' || !caller.evaluate;\n}\n\nexport default function linaria(babel: ConfigAPI, options: PluginOptions) {\n  if (!babel.caller(isEnabled)) {\n    return {};\n  }\n  debug('options', JSON.stringify(options));\n  return {\n    // eslint-disable-next-line global-require\n    plugins: [[require('./extract'), loadOptions(options)]],\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAGA,SAASA,KAAT,QAAsB,iBAAtB;AAGA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,2BAAxC;AACA,SAASD,OAAO,IAAIE,UAApB,QAAsC,kCAAtC;AACA,SAASF,OAAO,IAAIG,mBAApB,QAA+C,6BAA/C;AACA,SAASH,OAAO,IAAII,MAApB,QAAkC,UAAlC;AACA,SACEJ,OAAO,IAAIK,SADb,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,YAJF,QAKO,aALP;AAMA,cAAc,SAAd;AACA,SAASR,OAAO,IAAIS,wBAApB,QAAoD,kCAApD;AAOA,SAAST,OAAO,IAAIU,MAApB,QAAkC,gBAAlC;AACA,SAASV,OAAO,IAAIW,eAApB,QAA2C,yBAA3C;AACA,SAASX,OAAO,IAAIY,cAApB,QAA0C,wBAA1C;AAEA,SAASZ,OAAO,IAAIa,IAApB,QAAgC,cAAhC;AACA,SAASb,OAAO,IAAIc,yBAApB,QAAqD,mCAArD;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAAmE;EACjE,OAAOA,MAAM,EAAEC,IAAR,KAAiB,SAAjB,IAA8B,CAACD,MAAM,CAACE,QAA7C;AACD;;AAED,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAmCC,OAAnC,EAA2D;EACxE,IAAI,CAACD,KAAK,CAACJ,MAAN,CAAaD,SAAb,CAAL,EAA8B;IAC5B,OAAO,EAAP;EACD;;EACDnB,KAAK,CAAC,SAAD,EAAY0B,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAZ,CAAL;EACA,OAAO;IACL;IACAG,OAAO,EAAE,CAAC,CAACC,OAAO,CAAC,WAAD,CAAR,EAAuB5B,WAAW,CAACwB,OAAD,CAAlC,CAAD;EAFJ,CAAP;AAID"}