{"version":3,"file":"eval-cache.js","names":["createHash","debug","fileHashes","Map","evalCache","fileKeys","hash","text","update","digest","lastText","lastHash","memoizedHash","toKey","filename","exports","length","join","clear","clearForFile","keys","get","forEach","key","delete","set","has","textHash","undefined","value","push"],"sources":["../src/eval-cache.ts"],"sourcesContent":["import { createHash } from 'crypto';\n\nimport { debug } from '@linaria/logger';\n\nconst fileHashes = new Map<string, string>();\nconst evalCache = new Map<string, unknown>();\nconst fileKeys = new Map<string, string[]>();\n\nconst hash = (text: string) => createHash('sha1').update(text).digest('base64');\n\nlet lastText = '';\nlet lastHash: string = hash(lastText);\n\nconst memoizedHash: typeof hash = (text) => {\n  if (lastText !== text) {\n    lastHash = hash(text);\n    lastText = text;\n  }\n\n  return lastHash;\n};\n\nconst toKey = (filename: string, exports: string[]) =>\n  exports.length > 0 ? `${filename}:${exports.join(',')}` : filename;\n\nexport const clear = () => {\n  fileHashes.clear();\n  evalCache.clear();\n  fileKeys.clear();\n};\n\nexport const clearForFile = (filename: string) => {\n  const keys = fileKeys.get(filename) ?? [];\n  if (keys.length === 0) {\n    return;\n  }\n\n  debug('eval-cache:clear-for-file', filename);\n\n  keys.forEach((key) => {\n    fileHashes.delete(key);\n    evalCache.delete(key);\n  });\n\n  fileKeys.set(filename, []);\n};\n\nexport const has = (\n  [filename, ...exports]: string[],\n  text: string\n): boolean => {\n  const key = toKey(filename, exports);\n  const textHash = memoizedHash(text);\n  debug('eval-cache:has', `${key} ${textHash}`);\n\n  return fileHashes.get(key) === textHash;\n};\n\nexport const get = (\n  [filename, ...exports]: string[],\n  text: string\n): unknown => {\n  const key = toKey(filename, exports);\n  const textHash = memoizedHash(text);\n  debug('eval-cache:get', `${key} ${textHash}`);\n\n  if (fileHashes.get(key) !== textHash) {\n    return undefined;\n  }\n\n  return evalCache.get(key);\n};\n\nexport const set = (\n  [filename, ...exports]: string[],\n  text: string,\n  value: unknown\n): void => {\n  const key = toKey(filename, exports);\n  const textHash = memoizedHash(text);\n  debug('eval-cache:set', `${key} ${textHash}`);\n\n  fileHashes.set(key, textHash);\n  evalCache.set(key, value);\n\n  if (!fileKeys.has(filename)) {\n    fileKeys.set(filename, []);\n  }\n\n  fileKeys.get(filename)!.push(key);\n};\n"],"mappings":"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"}