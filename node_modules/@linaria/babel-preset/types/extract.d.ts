/**
 * This is an entry point for styles extraction.
 * On enter, It:
 *  - traverse the code using visitors (TaggedTemplateExpression, ImportDeclaration)
 *  - schedule evaluation of lazy dependencies (those who are not simple expressions //TODO does they have it's name?)
 *  - let templateProcessor to save evaluated values in babel state as `replacements`.
 * On exit, It:
 *  - store result of extraction in babel's file metadata
 */
import type { Visitor } from '@babel/traverse';
import type { Core } from './babel';
import type { State, StrictOptions } from './types';
export default function extract(babel: Core, options: StrictOptions): {
    visitor: Visitor<State>;
};
