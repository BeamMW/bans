/**
 * This file is a visitor that checks TaggedTemplateExpressions and look for Linaria css or styled templates.
 * For each template it makes a list of dependencies, try to evaluate expressions, and if it is not possible, mark them as lazy dependencies.
 */
import type { NodePath } from '@babel/traverse';
import type { TaggedTemplateExpression, TemplateElement } from '@babel/types';
import type { Core } from '../babel';
import type { StrictOptions, ExpressionValue, State } from '../types';
export default function collectTemplateDependencies(babel: Core, path: NodePath<TaggedTemplateExpression>, state: State, options: Pick<StrictOptions, 'classNameSlug' | 'displayName' | 'evaluate'>): [quasis: NodePath<TemplateElement>[], expressionValues: ExpressionValue[]];
