import type { NodePath } from '@babel/traverse';
import type { Identifier, MemberExpression } from '@babel/types';
interface IImportSpecifier {
    imported: string | '=' | '*';
    local: NodePath<Identifier | MemberExpression>;
}
export interface IImport extends IImportSpecifier {
    source: string;
}
export interface IExport {
    exported: string;
    local: NodePath;
}
export interface IState {
    imports: IImport[];
    exports: IExport[];
    filename: string;
}
export default function collectExportsAndImports(path: NodePath, filename: string): IState;
export {};
