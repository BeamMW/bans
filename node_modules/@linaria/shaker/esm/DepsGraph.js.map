{"version":3,"file":"DepsGraph.js","names":["types","t","resolveNode","addEdge","a","b","dependencies","has","get","edges","push","add","set","Set","dependents","DepsGraph","imports","Map","importAliases","importTypes","reexports","parents","WeakMap","exports","actionQueue","processQueue","length","forEach","action","resolvedA","resolvedB","call","getAllReferences","id","name","split","declaration","scope","getDeclaration","allReferences","Array","from","filter","i","isIdentifier","constructor","dependent","dependency","addExport","node","existed","addParent","parent","getParent","getDependenciesByBinding","includes","getDependentsByBinding","findDependencies","like","shallowEqual","map","findDependents","getDependencies","nodes","reduced","n","getLeaf","getLeaves","only","values"],"sources":["../src/DepsGraph.ts"],"sourcesContent":["import { types as t } from '@babel/core';\n\nimport type { PromisedNode } from './scope';\nimport type ScopeManager from './scope';\nimport { resolveNode } from './scope';\n\ntype Action = (this: DepsGraph, a: t.Node, b: t.Node) => void;\n\nfunction addEdge(this: DepsGraph, a: t.Node, b: t.Node) {\n  if (this.dependencies.has(a) && this.dependencies.get(a)!.has(b)) {\n    // edge has been already added∂ƒ\n    return;\n  }\n\n  this.edges.push([a, b]);\n  if (this.dependencies.has(a)) {\n    this.dependencies.get(a)!.add(b);\n  } else {\n    this.dependencies.set(a, new Set([b]));\n  }\n\n  if (this.dependents.has(b)) {\n    this.dependents.get(b)!.add(a);\n  } else {\n    this.dependents.set(b, new Set([a]));\n  }\n}\n\nexport default class DepsGraph {\n  public readonly imports: Map<string, (t.Identifier | t.StringLiteral)[]> =\n    new Map();\n\n  public readonly importAliases: Map<t.Identifier, string> = new Map();\n\n  public readonly importTypes: Map<\n    string,\n    'wildcard' | 'default' | 'reexport'\n  > = new Map();\n\n  public readonly reexports: Array<t.Identifier> = [];\n\n  protected readonly parents: WeakMap<t.Node, t.Node> = new WeakMap();\n\n  protected readonly edges: Array<[t.Node, t.Node]> = [];\n\n  protected readonly exports: Map<string, t.Node> = new Map();\n\n  protected readonly dependencies: Map<t.Node, Set<t.Node>> = new Map();\n\n  protected readonly dependents: Map<t.Node, Set<t.Node>> = new Map();\n\n  private actionQueue: Array<\n    [Action, t.Node | PromisedNode, t.Node | PromisedNode]\n  > = [];\n\n  private processQueue() {\n    if (this.actionQueue.length === 0) {\n      return;\n    }\n\n    this.actionQueue.forEach(([action, a, b]) => {\n      const resolvedA = resolveNode(a);\n      const resolvedB = resolveNode(b);\n      if (resolvedA && resolvedB) {\n        action.call(this, resolvedA, resolvedB);\n      }\n    });\n\n    this.actionQueue = [];\n  }\n\n  private getAllReferences(id: string): (t.Identifier | t.MemberExpression)[] {\n    const [, name] = id.split(':');\n    const declaration = this.scope.getDeclaration(id)!;\n    const allReferences: (t.Identifier | t.MemberExpression)[] = [\n      ...Array.from(this.dependencies.get(declaration) || []),\n      ...Array.from(this.dependents.get(declaration) || []),\n    ].filter((i) => t.isIdentifier(i) && i.name === name) as t.Identifier[];\n    allReferences.push(declaration);\n    return allReferences;\n  }\n\n  constructor(protected scope: ScopeManager) {}\n\n  addEdge(dependent: t.Node | PromisedNode, dependency: t.Node | PromisedNode) {\n    this.actionQueue.push([addEdge, dependent, dependency]);\n  }\n\n  addExport(name: string, node: t.Node) {\n    const existed = this.exports.get(name);\n    if (existed) {\n      // Sometimes export can be defined more than once and in that case we have to keep all export statements\n      this.addEdge(node, existed);\n    }\n\n    this.exports.set(name, node);\n  }\n\n  addParent(node: t.Node, parent: t.Node) {\n    this.parents.set(node, parent);\n  }\n\n  getParent(node: t.Node): t.Node | undefined {\n    return this.parents.get(node);\n  }\n\n  getDependenciesByBinding(id: string) {\n    this.processQueue();\n    const allReferences = this.getAllReferences(id);\n    const dependencies: t.Node[] = [];\n    this.edges.forEach(([a, b]) => {\n      if (t.isIdentifier(a) && allReferences.includes(a)) {\n        dependencies.push(b);\n      }\n    });\n\n    return dependencies;\n  }\n\n  getDependentsByBinding(id: string) {\n    this.processQueue();\n    const allReferences = this.getAllReferences(id);\n    const dependents: t.Node[] = [];\n    this.edges.forEach(([a, b]) => {\n      if (t.isIdentifier(b) && allReferences.includes(b)) {\n        dependents.push(a);\n      }\n    });\n\n    return dependents;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  findDependencies(like: Object) {\n    this.processQueue();\n    return this.edges\n      .filter(([a]) => t.shallowEqual(a, like))\n      .map(([, b]) => b);\n  }\n\n  findDependents(like: object) {\n    this.processQueue();\n    return this.edges\n      .filter(([, b]) => t.shallowEqual(b, like))\n      .map(([a]) => a);\n  }\n\n  getDependencies(nodes: t.Node[]) {\n    this.processQueue();\n    const reduced: t.Node[] = [];\n    nodes.forEach((n) =>\n      reduced.push(...Array.from(this.dependencies.get(n) || []))\n    );\n    return reduced;\n  }\n\n  getLeaf(name: string): t.Node | undefined {\n    return this.exports.get(name);\n  }\n\n  getLeaves(only: string[] | null): Array<t.Node | undefined> {\n    this.processQueue();\n    return only\n      ? only.map((name) => this.getLeaf(name))\n      : Array.from(this.exports.values());\n  }\n}\n"],"mappings":"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"}