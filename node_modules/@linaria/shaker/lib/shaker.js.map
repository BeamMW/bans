{"version":3,"file":"shaker.js","names":["shakeNode","node","alive","keys","getVisitorKeys","changes","isNodeAlive","n","has","forEach","key","subNode","Array","isArray","list","hasChanges","i","length","child","isAlive","shaken","push","isNode","undefined","Object","isDefined","shake","rootPath","exports","debug","join","generator","code","depsGraph","build","Set","reexports","deps","map","token","getLeaves","filter","getLeaf","reduce","acc","el","d","add","getDependencies","dumpNode","imports","Map","entries","source","members","importType","importTypes","get","defaultMembers","aliveMembers","type","name","value","set","size","from"],"sources":["../src/shaker.ts"],"sourcesContent":["import generator from '@babel/generator';\nimport type { Node, Program } from '@babel/types';\n\nimport { isNode, getVisitorKeys } from '@linaria/babel-preset';\nimport { debug } from '@linaria/logger';\n\nimport dumpNode from './dumpNode';\nimport build from './graphBuilder';\n\n/*\n * Returns new tree without dead nodes\n */\nfunction shakeNode<TNode extends Node>(node: TNode, alive: Set<Node>): Node {\n  const keys = getVisitorKeys(node) as Array<keyof TNode>;\n  const changes: Partial<TNode> = {};\n  const isNodeAlive = (n: Node) => alive.has(n);\n\n  keys.forEach((key) => {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const list: any = [];\n      let hasChanges = false;\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        const isAlive = isNodeAlive(child);\n        hasChanges = hasChanges || !isAlive;\n        if (child && isAlive) {\n          const shaken = shakeNode(child, alive);\n          if (shaken) {\n            list.push(shaken);\n          }\n\n          hasChanges = hasChanges || shaken !== child;\n        }\n      }\n      if (hasChanges) {\n        changes[key] = list;\n      }\n    } else if (isNode(subNode)) {\n      if (isNodeAlive(subNode)) {\n        const shaken = shakeNode(subNode, alive);\n        if (shaken && shaken !== subNode) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          changes[key] = shaken as any;\n        }\n      } else {\n        changes[key] = undefined;\n      }\n    }\n  });\n\n  return Object.keys(changes).length ? { ...node, ...changes } : node;\n}\n\nconst isDefined = <T>(i: T | undefined): i is T => i !== undefined;\n\n/*\n * Gets AST and a list of nodes for evaluation\n * Removes unrelated “dead” code.\n * Adds to the end of module export of array of evaluated values or evaluation errors.\n * Returns new AST and an array of external dependencies.\n */\nexport default function shake(\n  rootPath: Program,\n  exports: string[] | null\n): [Program, Map<string, string[]>] {\n  debug(\n    'evaluator:shaker:shake',\n    () =>\n      `source (exports: ${(exports || []).join(', ')}):\\n${\n        generator(rootPath).code\n      }`\n  );\n\n  const depsGraph = build(rootPath);\n  const alive = new Set<Node>();\n  const reexports: string[] = [];\n  let deps = (exports ?? [])\n    .map((token) => {\n      if (token === '*') {\n        return depsGraph.getLeaves(null).filter(isDefined);\n      }\n\n      const node = depsGraph.getLeaf(token);\n      if (node) return [node];\n      // We have some unknown token. Do we have `export * from …` in that file?\n      if (depsGraph.reexports.length === 0) {\n        return [];\n      }\n\n      // If so, mark all re-exported files as required\n      reexports.push(token);\n      return [...depsGraph.reexports];\n    })\n    .reduce<Node[]>((acc, el) => {\n      acc.push(...el);\n      return acc;\n    }, []);\n  while (deps.length > 0) {\n    // Mark all dependencies as alive\n    deps.forEach((d) => alive.add(d));\n\n    // Collect new dependencies of dependencies\n    deps = depsGraph.getDependencies(deps).filter((d) => !alive.has(d));\n  }\n\n  const shaken = shakeNode(rootPath, alive) as Program;\n  /*\n   * If we want to know what is really happen with our code tree,\n   * we can print formatted tree here by setting env variable LINARIA_LOG=debug\n   */\n  debug('evaluator:shaker:shake', () => dumpNode(rootPath, alive));\n\n  const imports = new Map<string, string[]>();\n  [...depsGraph.imports.entries()].forEach(([source, members]) => {\n    const importType = depsGraph.importTypes.get(source);\n    const defaultMembers = importType === 'wildcard' ? ['*'] : [];\n    const aliveMembers = new Set(\n      members\n        .filter((i) => alive.has(i))\n        .map((i) => (i.type === 'Identifier' ? i.name : i.value))\n    );\n\n    if (importType === 'reexport') {\n      reexports.forEach((token) => aliveMembers.add(token));\n    }\n\n    imports.set(\n      source,\n      aliveMembers.size > 0 ? Array.from(aliveMembers) : defaultMembers\n    );\n  });\n\n  return [shaken, imports];\n}\n"],"mappings":"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"}