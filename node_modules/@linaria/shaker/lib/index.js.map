{"version":3,"sources":["../src/index.ts"],"names":["prepareForShake","filename","options","code","transformOptions","ast","presets","unshift","require","resolve","targets","include","plugins","useESModules","JSON","stringify","transformed","Error","program","shaker","text","only","shaken","imports","shakenCode"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;;;AAEA,SAASA,eAAT,CACEC,QADF,EAEEC,OAFF,EAGEC,IAHF,EAIW;AACT,QAAMC,gBAAgB,GAAG,+BAAaH,QAAb,EAAuBC,OAAvB,CAAzB;AAEAE,EAAAA,gBAAgB,CAACC,GAAjB,GAAuB,IAAvB;AACAD,EAAAA,gBAAgB,CAACE,OAAjB,CAA0BC,OAA1B,CAAkC,CAChCC,OAAO,CAACC,OAAR,CAAgB,mBAAhB,CADgC,EAEhC;AACEC,IAAAA,OAAO,EAAE,OADX;AAEE;AACAC,IAAAA,OAAO,EAAE,CAAC,2CAAD;AAHX,GAFgC,CAAlC;AAQAP,EAAAA,gBAAgB,CAACE,OAAjB,CAA0BC,OAA1B,CAAkC,CAChCC,OAAO,CAACC,OAAR,CAAgB,kBAAhB,CADgC,EAEhCP,OAFgC,CAAlC;AAIAE,EAAAA,gBAAgB,CAACQ,OAAjB,CAA0BL,OAA1B,CACEC,OAAO,CAACC,OAAR,CAAgB,gDAAhB,CADF;AAGAL,EAAAA,gBAAgB,CAACQ,OAAjB,CAA0BL,OAA1B,CAAkC,CAChCC,OAAO,CAACC,OAAR,CAAgB,iCAAhB,CADgC,EAEhC;AAAEI,IAAAA,YAAY,EAAE;AAAhB,GAFgC,CAAlC;AAKA,qBACE,4BADF,EAEG,aAAYZ,QAAS,iBAAgBa,IAAI,CAACC,SAAL,CACpCX,gBADoC,EAEpC,IAFoC,EAGpC,CAHoC,CAIpC,EANJ;AAQA,QAAMY,WAAW,GAAG,yBAAcb,IAAd,EAAoBC,gBAApB,CAApB;;AAEA,MAAIY,WAAW,KAAK,IAAhB,IAAwB,CAACA,WAAW,CAACX,GAAzC,EAA8C;AAC5C,UAAM,IAAIY,KAAJ,CAAW,GAAEhB,QAAS,wBAAtB,CAAN;AACD;;AAED,SAAOe,WAAW,CAACX,GAAZ,CAAgBa,OAAvB;AACD;;AAED,MAAMC,MAAiB,GAAG,CAAClB,QAAD,EAAWC,OAAX,EAAoBkB,IAApB,EAA0BC,IAAI,GAAG,IAAjC,KAA0C;AAClE,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoB,qBACxBvB,eAAe,CAACC,QAAD,EAAWC,OAAX,EAAoBkB,IAApB,CADS,EAExBC,IAFwB,CAA1B;AAKA,qBAAM,2BAAN,EAAoC,+BAA8BpB,QAAS,EAA3E;AACA,QAAM;AAAEE,IAAAA,IAAI,EAAEqB;AAAR,MAAuB,wBAAUF,MAAV,CAA7B;AACA,SAAO,CAACE,UAAD,EAAaD,OAAb,CAAP;AACD,CATD;;eAWeJ,M","sourcesContent":["import generator from '@babel/generator';\nimport { transformSync } from '@babel/core';\nimport type { Program } from '@babel/types';\nimport { debug } from '@linaria/logger';\nimport type { Evaluator, StrictOptions } from '@linaria/babel-preset';\nimport { buildOptions } from '@linaria/babel-preset';\nimport shake from './shaker';\n\nfunction prepareForShake(\n  filename: string,\n  options: StrictOptions,\n  code: string\n): Program {\n  const transformOptions = buildOptions(filename, options);\n\n  transformOptions.ast = true;\n  transformOptions.presets!.unshift([\n    require.resolve('@babel/preset-env'),\n    {\n      targets: 'ie 11',\n      // we need this plugin so we list it explicitly, explanation in `packages/extractor/src/index`\n      include: ['@babel/plugin-transform-template-literals'],\n    },\n  ]);\n  transformOptions.presets!.unshift([\n    require.resolve('@linaria/preeval'),\n    options,\n  ]);\n  transformOptions.plugins!.unshift(\n    require.resolve('babel-plugin-transform-react-remove-prop-types')\n  );\n  transformOptions.plugins!.unshift([\n    require.resolve('@babel/plugin-transform-runtime'),\n    { useESModules: false },\n  ]);\n\n  debug(\n    'evaluator:shaker:transform',\n    `Transform ${filename} with options ${JSON.stringify(\n      transformOptions,\n      null,\n      2\n    )}`\n  );\n  const transformed = transformSync(code, transformOptions);\n\n  if (transformed === null || !transformed.ast) {\n    throw new Error(`${filename} cannot be transformed`);\n  }\n\n  return transformed.ast.program;\n}\n\nconst shaker: Evaluator = (filename, options, text, only = null) => {\n  const [shaken, imports] = shake(\n    prepareForShake(filename, options, text),\n    only\n  );\n\n  debug('evaluator:shaker:generate', `Generate shaken source code ${filename}`);\n  const { code: shakenCode } = generator(shaken!);\n  return [shakenCode, imports];\n};\n\nexport default shaker;\n"],"file":"index.js"}