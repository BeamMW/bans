{"version":3,"sources":["../src/index.ts"],"names":["genericDebug","pc","levels","currentLevel","indexOf","process","env","LINARIA_LOG","linariaLogger","loggers","Map","gerOrCreate","namespace","lastIndexOf","has","set","substr","extend","get","format","text","replace","log","level","namespaces","arg1","restArgs","logger","enabled","debug","bind","info","warn","error","notify","message","console","red","s","italic","substring","length"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,OAAzB;AAEA,OAAOC,EAAP,MAAe,YAAf;AAIA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,CAAf;AACA,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAAO,CAACC,GAAR,CAAYC,WAAZ,IAA2B,MAA1C,CAArB;AAEA,MAAMC,aAAa,GAAGR,YAAY,CAAC,SAAD,CAAlC;AAEA,MAAMS,OAAO,GAAG,IAAIC,GAAJ,EAAhB;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAqE;AACnE,MAAI,CAACA,SAAL,EAAgB,OAAOJ,aAAP;AAChB,QAAMK,WAAW,GAAGD,SAAS,CAACC,WAAV,CAAsB,GAAtB,CAApB;;AACA,MAAI,CAACJ,OAAO,CAACK,GAAR,CAAYF,SAAZ,CAAL,EAA6B;AAC3BH,IAAAA,OAAO,CAACM,GAAR,CACEH,SADF,EAEED,WAAW,CAACC,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBH,WAApB,CAAD,CAAX,CAA8CI,MAA9C,CACEL,SAAS,CAACI,MAAV,CAAiBH,WAAW,GAAG,CAA/B,CADF,CAFF;AAMD;;AAED,SAAOJ,OAAO,CAACS,GAAR,CAAYN,SAAZ,CAAP;AACD;;AAED,MAAMO,MAAM,GAAOC,IAAJ,IAAgB;AAC7B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,MAApB,CAAP;AACD;;AAED,SAAOD,IAAP;AACD,CAND;;AAQA,SAASE,GAAT,CACEC,KADF,EAEEC,UAFF,EAGEC,IAHF,EAIE,GAAGC,QAJL,EAKE;AACA,MAAIvB,YAAY,GAAGD,MAAM,CAACE,OAAP,CAAemB,KAAf,CAAnB,EAA0C;AACxC;AACD;;AAED,QAAMI,MAAM,GAAGhB,WAAW,CAACa,UAAD,CAA1B;AACA,MAAI,CAACG,MAAM,CAACC,OAAZ,EAAqB;;AAErB,MAAI,OAAOH,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAML,IAAI,GAAGK,IAAI,EAAjB;;AACA,QAAIL,IAAJ,EAAU;AACRO,MAAAA,MAAM,CAAC,EAAD,EAAKR,MAAM,CAACC,IAAD,CAAX,EAAmB,GAAGM,QAAtB,CAAN;AACD;;AACD;AACD;;AAEDC,EAAAA,MAAM,CAAC,EAAD,EAAKR,MAAM,CAACM,IAAD,CAAX,EAAmB,GAAGC,QAAtB,CAAN;AACD;;AAED,OAAO,MAAMG,KAAK,GAAGP,GAAG,CAACQ,IAAJ,CAAS,IAAT,EAAe,OAAf,CAAd;AACP,OAAO,MAAMC,IAAI,GAAGT,GAAG,CAACQ,IAAJ,CAAS,IAAT,EAAe,MAAf,CAAb;AACP,OAAO,MAAME,IAAI,GAAGV,GAAG,CAACQ,IAAJ,CAAS,IAAT,EAAe,MAAf,CAAb;AACP,OAAO,MAAMG,KAAK,GAAGX,GAAG,CAACQ,IAAJ,CAAS,IAAT,EAAe,OAAf,CAAd;AAEP,OAAO,MAAMI,MAAM,GAAIC,OAAD,IAAqB;AACzCC,EAAAA,OAAO,CAACd,GAAR,CACErB,EAAE,CAACoC,GAAH,CACEF,OAAO,CAACd,OAAR,CAAgB,UAAhB,EAA6BiB,CAAD,IAC1BrC,EAAE,CAACsC,MAAH,CAAUD,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeF,CAAC,CAACG,MAAF,GAAW,CAA1B,CAAV,CADF,CADF,CADF;AAOD,CARM","sourcesContent":["import genericDebug from 'debug';\nimport type { Debugger } from 'debug';\nimport pc from 'picocolors';\n\ntype LogLevel = 'error' | 'warn' | 'info' | 'debug';\n\nconst levels = ['error', 'warn', 'info', 'debug'];\nconst currentLevel = levels.indexOf(process.env.LINARIA_LOG || 'warn');\n\nconst linariaLogger = genericDebug('linaria');\n\nconst loggers = new Map<string, Debugger>();\n\nfunction gerOrCreate(namespace: string | null | undefined): Debugger {\n  if (!namespace) return linariaLogger;\n  const lastIndexOf = namespace.lastIndexOf(':');\n  if (!loggers.has(namespace)) {\n    loggers.set(\n      namespace,\n      gerOrCreate(namespace.substr(0, lastIndexOf)).extend(\n        namespace.substr(lastIndexOf + 1)\n      )\n    );\n  }\n\n  return loggers.get(namespace)!;\n}\n\nconst format = <T>(text: T) => {\n  if (typeof text === 'string') {\n    return text.replace(/\\n/g, '\\n\\t');\n  }\n\n  return text;\n};\n\nfunction log(\n  level: LogLevel,\n  namespaces: string,\n  arg1: any | (() => void),\n  ...restArgs: any[]\n) {\n  if (currentLevel < levels.indexOf(level)) {\n    return;\n  }\n\n  const logger = gerOrCreate(namespaces);\n  if (!logger.enabled) return;\n\n  if (typeof arg1 === 'function') {\n    const text = arg1();\n    if (text) {\n      logger('', format(text), ...restArgs);\n    }\n    return;\n  }\n\n  logger('', format(arg1), ...restArgs);\n}\n\nexport const debug = log.bind(null, 'debug');\nexport const info = log.bind(null, 'info');\nexport const warn = log.bind(null, 'warn');\nexport const error = log.bind(null, 'error');\n\nexport const notify = (message: string) => {\n  console.log(\n    pc.red(\n      message.replace(/(`.*?`)/g, (s) =>\n        pc.italic(s.substring(1, s.length - 1))\n      )\n    )\n  );\n};\n"],"file":"index.js"}