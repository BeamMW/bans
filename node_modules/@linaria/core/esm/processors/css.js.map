{"version":3,"file":"css.js","names":["BaseProcessor","CssProcessor","constructor","args","params","length","Error","addInterpolation","extractRules","valueCache","cssText","loc","rules","selector","className","displayName","start","getRuntimeReplacement","classes","astService","stringLiteral","asSelector","tagExpression","tagExp","valueSource"],"sources":["../../src/processors/css.ts"],"sourcesContent":["import type { Expression, SourceLocation } from '@babel/types';\n\nimport type { ProcessorParams } from './BaseProcessor';\nimport BaseProcessor from './BaseProcessor';\nimport type { Rules, ValueCache } from './types';\n\nexport default class CssProcessor extends BaseProcessor {\n  constructor(...args: ProcessorParams) {\n    super(...args);\n\n    if (this.params.length > 0) {\n      throw new Error('Invalid usage of `css` tag');\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public override addInterpolation(): string {\n    // CSS custom properties can't be used outside components\n    throw new Error(\n      \"The CSS cannot contain JavaScript expressions when using the 'css' tag. To evaluate the expressions at build time, pass 'evaluate: true' to the babel plugin.\"\n    );\n  }\n\n  public override extractRules(\n    valueCache: ValueCache,\n    cssText: string,\n    loc?: SourceLocation | null\n  ): [Rules, string] {\n    const rules: Rules = {};\n\n    const selector = `.${this.className}`;\n\n    rules[selector] = {\n      cssText,\n      className: this.className,\n      displayName: this.displayName,\n      start: loc?.start ?? null,\n    };\n\n    return [rules, this.className];\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public override getRuntimeReplacement(\n    classes: string\n  ): [Expression, boolean] {\n    return [this.astService.stringLiteral(classes), false];\n  }\n\n  public override get asSelector(): string {\n    return this.className;\n  }\n\n  protected override get tagExpression(): Expression {\n    return this.tagExp;\n  }\n\n  public override get valueSource(): string {\n    return `\"${this.className}\"`;\n  }\n}\n"],"mappings":"AAGA,OAAOA,aAAP,MAA0B,iBAA1B;AAGA,eAAe,MAAMC,YAAN,SAA2BD,aAA3B,CAAyC;EACtDE,WAAW,CAAC,GAAGC,IAAJ,EAA2B;IACpC,MAAM,GAAGA,IAAT;;IAEA,IAAI,KAAKC,MAAL,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;MAC1B,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;IACD;EACF,CAPqD,CAStD;;;EACgBC,gBAAgB,GAAW;IACzC;IACA,MAAM,IAAID,KAAJ,CACJ,+JADI,CAAN;EAGD;;EAEeE,YAAY,CAC1BC,UAD0B,EAE1BC,OAF0B,EAG1BC,GAH0B,EAIT;IACjB,MAAMC,KAAY,GAAG,EAArB;IAEA,MAAMC,QAAQ,GAAI,IAAG,KAAKC,SAAU,EAApC;IAEAF,KAAK,CAACC,QAAD,CAAL,GAAkB;MAChBH,OADgB;MAEhBI,SAAS,EAAE,KAAKA,SAFA;MAGhBC,WAAW,EAAE,KAAKA,WAHF;MAIhBC,KAAK,EAAEL,GAAG,EAAEK,KAAL,IAAc;IAJL,CAAlB;IAOA,OAAO,CAACJ,KAAD,EAAQ,KAAKE,SAAb,CAAP;EACD,CAlCqD,CAoCtD;;;EACgBG,qBAAqB,CACnCC,OADmC,EAEZ;IACvB,OAAO,CAAC,KAAKC,UAAL,CAAgBC,aAAhB,CAA8BF,OAA9B,CAAD,EAAyC,KAAzC,CAAP;EACD;;EAE6B,IAAVG,UAAU,GAAW;IACvC,OAAO,KAAKP,SAAZ;EACD;;EAEmC,IAAbQ,aAAa,GAAe;IACjD,OAAO,KAAKC,MAAZ;EACD;;EAE8B,IAAXC,WAAW,GAAW;IACxC,OAAQ,IAAG,KAAKV,SAAU,GAA1B;EACD;;AArDqD"}